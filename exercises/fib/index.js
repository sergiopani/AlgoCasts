// --- Directions
// Print out the n-th entry in the fibonacci series.
// The fibonacci series is an ordering of numbers where
// each number is the sum of the preceeding two.
// For example, the sequence
//  [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
// forms the first ten entries of the fibonacci series.
// Example:
//   fib(4) === 3

/* function fib(n) {
    let result = [0,1];

    //The first two numbers can not be generated by a loop
    for(let i = 2;i<=n;i++){
        const a = result[i - 1];
        const b = result[i - 2];
        
        //Add this two numbers
        result.push(a+b);
    }


    return result[n];

}
 */

function memoize(fn){
    //Store all the prevcus calls of the fn
    const cache = {};
    //This anonymus function is fyb
    //Take are the arguments and trate them as an array
    return function(...args){
        //if we called the function with this set of arguments
        if(cache[args]){
            return cache[args];
        }
        //Call slowFib function
        const result = fn.apply(this,args);

        cache[args] = result;
    }
}
//Memoization --> Table that saves every result in function call

function slowFib(n){

    if(n<2){
        return n;
    }

    return fib(n-1) + fib(n-2);

}
//New function called fib 
const fib = memoize(slowFib);

fib(5);

module.exports = fibRecursive;
